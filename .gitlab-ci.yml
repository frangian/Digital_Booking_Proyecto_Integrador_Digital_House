stages:
  - build
  # - test
  - deploy

build -back:
  stage: build
  image: maven:latest
  script:
    - echo "Building app..."
    - cd back-end/
    - mvn clean install
    - echo "Finished building app."
  artifacts:
    expire_in: 1 hour
    paths:
      - back-end/target/*.jar
  rules:
    - if: '$CI_COMMIT_BRANCH == "desarrollo"'
      changes:
        - back-end/**/*

# automated-api-tests -back:
#   stage: test
#   image: cimg/base:2021.04
#   before_script:
#     # Installing Postman CLI
#     - curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
#   script:
#     # Login using your Postman API keys
#     - postman login --with-api-key $POSTMAN_API_KEY
#     - postman collection run "23352616-97f36139-a037-4e64-b813-0208a3cc418f" -e "23352616-58ccde2f-670f-400d-93c0-d4f1ec59f1c0"
#   rules:
#   - if: '$CI_COMMIT_BRANCH == "desarrollo"'
#     changes:
#       - back-end/**/*

deploy -back:
  stage: deploy
  image: ubuntu:latest
  before_script:
    - apt-get update && apt-get install -y openssh-client bash
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    # - echo $SSH_PRIVATE_KEY | tr -d '\r' | ssh-add - > /dev/null
    - touch ~/.ssh/config
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh-keyscan $DEPLOY_SERVER_IP >> ~/.ssh/known_hosts
  script:
    - echo "Deploying started..."
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh -i "$SSH_PRIVATE_KEY" ubuntu@"$DEPLOY_SERVER_IP" "sudo systemctl stop consoleapp.service"
    - scp -i "$SSH_PRIVATE_KEY" back-end/target/consoleapp.jar ubuntu@"$DEPLOY_SERVER_IP":~/console-app/
    - ssh -i "$SSH_PRIVATE_KEY" ubuntu@"$DEPLOY_SERVER_IP" "sudo systemctl start consoleapp.service"
    - ssh -i "$SSH_PRIVATE_KEY" ubuntu@"$DEPLOY_SERVER_IP" "sudo systemctl status consoleapp.service"
    - echo "Finished deploying the app."
  rules:
    - if: '$CI_COMMIT_BRANCH == "desarrollo"'
      changes:
        - back-end/**/*

build -front:
  stage: build
  image: node:16.5.0
  script:
    - cd front-end/
    - export NODE_OPTIONS=--max_old_space_size=4096
    - npm install
    - npm run build
  artifacts:
    paths:
      - front-end/
  rules:
    - if: '$CI_COMMIT_BRANCH == "desarrollo"'
      changes:
        - front-end/**/*

# test -front:
#   stage: test
#   image: node:16.5.0
#   script:
#     - cd front-end/
#     - npm install
#     - npm run test
#   rules:
#   - if: '$CI_COMMIT_BRANCH == "desarrollo"'
#     changes:
#       - front-end/**/*

deploy -front:
  stage: deploy
  image: 
    name: amazon/aws-cli:2.11.3
    entrypoint: ['']
  script:
    - aws --version
    - aws s3 sync --acl public-read front-end/build s3://$AWS_S3_BUCKET --delete
    # - aws s3 sync --acl public-read --delete ./front-end/build s3://$AWS_S3_BUCKET --region us-east-2 --exclude '.git/*'
  rules:
    - if: '$CI_COMMIT_BRANCH == "desarrollo"'
      changes:
        - front-end/**/*